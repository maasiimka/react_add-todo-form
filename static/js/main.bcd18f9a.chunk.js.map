{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","findUserByUserId","userId","usersFromServer","find","todosWithUser","App","useState","setTodos","setTitle","setUserId","titleValid","setTitleValidity","userIdValid","setUserIdValidity","onSubmit","event","preventDefault","currentTodos","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcd18f9a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames({\n        TodoInfo,\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {\n        user && <UserInfo user={user} />\n      }\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map((todo) => {\n          const { id } = todo;\n\n          return (\n            <TodoInfo key={id} todo={todo} />\n          );\n        })\n      }\n    </section>\n  );\n};\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nconst findUserByUserId = (userId: number) => {\n  return usersFromServer.find(({ id }) => id === userId) || null;\n};\n\nconst todosWithUser = todosFromServer.map(todo => {\n  const { userId } = todo;\n\n  return {\n    ...todo,\n    user: findUserByUserId(userId),\n  };\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(-1);\n  const [titleValid, setTitleValidity] = useState(true);\n  const [userIdValid, setUserIdValidity] = useState(true);\n\n  const getNewId = () => (Math.max(...todos.map(({ id }) => id)) + 1);\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleValidity(true);\n  };\n\n  const handleUserChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserId(+value);\n    setUserIdValidity(true);\n  };\n\n  const handleFormSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title !== '' && userId !== -1) {\n      setTodos((currentTodos) => ([\n        ...currentTodos,\n        {\n          id: getNewId(),\n          title,\n          completed: false,\n          userId,\n          user: findUserByUserId(userId),\n        },\n      ]));\n\n      setTitle('');\n      setUserId(-1);\n\n      return;\n    }\n\n    if (title === '') {\n      setTitleValidity(false);\n    }\n\n    if (userId === -1) {\n      setUserIdValidity(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleFormSubmit}>\n        <label className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter the title\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          {\n            !titleValid && <span className=\"error\">Please enter a title</span>\n          }\n        </label>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option disabled value={-1}>Choose a user</option>\n            {\n              usersFromServer.map(({ id, name }) => (\n                <option value={id}>{name}</option>\n              ))\n            }\n          </select>\n\n          {\n            !userIdValid && <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}